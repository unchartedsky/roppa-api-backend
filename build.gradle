import nu.studer.gradle.jooq.JooqEdition

plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'nu.studer.jooq' version '7.1.1'
    id 'java'
    id 'com.palantir.docker' version '0.34.0'
    id 'org.owasp.dependencycheck' version '7.1.2'
}

group = 'y1sh'
archivesBaseName = 'roppa-api-backend'
version = '0.1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceSets.main.java.srcDirs = ['src/generated','src/main/java']

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Driver
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    jooqGenerator 'org.mariadb.jdbc:mariadb-java-client'

    // jooq
    implementation 'org.jooq:jooq-codegen:3.17.3'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

jooq {
    version = dependencyManagement.importedProperties['jooq.version']
    edition = JooqEdition.OSS  // the default (can be omitted)

    configurations {
        roppa {  // name of the jOOQ configuration
            generateSchemaSourceOnCompilation = true  // default (can be omitted)

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = "org.mariadb.jdbc.Driver"
                    url = "jdbc:mariadb://127.0.0.1:3306/roppa"
                    user = "roppa"
                    password = "r0ppa!"
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.mariadb.MariaDBDatabase'
                        inputSchema = 'roppa'
                    }
                    generate {
                        deprecated = false
                        records = true
                        pojos = true
                        immutablePojos = false
                        fluentSetters = true
                    }
                    target {
                        packageName = "roppa.apibackend.database"
                        directory = "src/generated"
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}

docker {
    name "${group}/${archivesBaseName}"
    dockerfile = file('src/main/docker/Dockerfile')
    files bootJar.archiveFile
    buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}"])
}
