buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.21.0")
    }
}

group = 'y1sh'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.docker'

bootJar {
    baseName = 'roppa-api-backend'
    version =  '0.1.0'
}

project.sourceCompatibility = 11
project.targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.mariadb.jdbc:mariadb-java-client:2.4.0")

    // To resolve deprecated package dependencies in the JDK9.
    // Besides we can use module-info.java, but this package will be removed in the JDK10.
    compile("javax.xml.bind:jaxb-api:2.3.0")

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
}

docker {
    name "${project.group}/${jar.baseName}"
    dockerfile = file('src/main/docker/Dockerfile')
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

/*
task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}*/
